{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","handleInputChange","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","onClick","dummy","document","createElement","body","appendChild","select","execCommand","removeChild","window","alert","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","image","GifExpertApp","ReactDOM","render","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACE,uBAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAA+BO,OAE7CN,EAAc,MAKhB,UACG,iBACD,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAAU,SAACP,GAAD,OApBU,SAACA,GACzBF,EAAcE,EAAEQ,OAAOF,OAmBFG,CAAkBT,U,+BC1B9BU,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,0FAC0EC,UAC7FH,GAFmB,sBAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXjB,kBAedM,GAfc,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAavC,OACE,sBAAKc,UAAU,+DAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKC,IAAKf,EAAKgB,IAAKN,MAEtB,4BAAKA,IACL,wBAAQO,QAjBE,WACZ,IAAIC,EAAQC,SAASC,cAAc,YACnCD,SAASE,KAAKC,YAAYJ,GAC1BA,EAAMzB,MAAQO,EACdkB,EAAMK,SACNJ,SAASK,YAAY,QACrBL,SAASE,KAAKI,YAAYP,GAE1BQ,OAAOC,MAAM,gCASX,0BCjBOC,EAAU,SAAC,GAAkB,IAAhB9B,EAAe,EAAfA,SACxB,ECF0B,SAACA,GAC3B,MAA0Bf,mBAAS,CACjCsB,KAAM,GACNwB,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRnC,EAAQC,GAAUmC,MAAK,SAACC,GACtBH,EAAS,CACP1B,KAAM6B,EACNL,SAAS,SAGZ,CAAC/B,IAEGgC,EDb2BK,CAAarC,GAAvC+B,EAAR,EAAQA,QAAelB,EAAvB,EAAiBN,KAEjB,OACE,sBAAKS,UAAU,WAAf,UACE,oBAAIA,UAAU,wCAAd,SAAuDhB,IACvD,oBAAIgB,UAAU,0CAEbe,GACG,qBACEd,IAAI,4EACJC,IAAI,UACJF,UAAU,gBAIhB,qBAAKA,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAAC6B,GAAD,OACV,cAAC,EAAD,eAAgCA,GAAdA,EAAM3B,aEAnB4B,EAlBM,WACnB,MAAoCtD,mBAAS,CAAC,QAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACE,sBAAKgC,UAAU,iBAAf,UACE,kDAEA,cAAC,EAAD,CAAahC,cAAeA,IAE5B,6BACGS,EAAWgB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAASA,SAAUA,GAAeA,Y,MCT5CwC,IAASC,OACL,cAAC,EAAD,IACFpB,SAASqB,eAAe,W","file":"static/js/main.d186ba27.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((categories) => [inputValue,...categories]);\r\n\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {\"Search query: \"} \r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={(e) => handleInputChange(e)}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\n\r\nAddCategory.propTypes= {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=ferA1YPMbupw3SdWPvhKJhuv4jn0znVu&q=${encodeURI(\r\n    category\r\n  )}&limit=10`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\nconst copyURL = () => {\r\n    var dummy = document.createElement(\"textarea\");\r\n    document.body.appendChild(dummy);\r\n    dummy.value = url;\r\n    dummy.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(dummy);\r\n\r\n    window.alert(\"Gif url copied to clipboard\")\r\n}\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeInLeft animate__delay-1s\">\r\n      <div className=\"img-container\">\r\n        <img src={url} alt={title} />\r\n      </div>\r\n      <p >{title}</p>\r\n      <button onClick={copyURL}>Copy URL</button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { loading, data: images } = useFetchGifs(category);\r\n\r\n  return (\r\n    <div className=\"gif-grid\">\r\n      <h3 className=\"animate__animated animate__fadeInLeft\">{category}</h3>\r\n      <hr className=\"animate__animated animate__fadeInLeft\" />\r\n\r\n      {loading && (\r\n          <img\r\n            src=\"https://media.tenor.com/images/a742721ea2075bc3956a2ff62c9bfeef/tenor.gif\"\r\n            alt=\"loading\"\r\n            className=\"loading-gif\"\r\n          />\r\n      )}\r\n\r\n      <div className=\"card-grid\">\r\n        {images.map((image) => (\r\n          <GifGridItem key={image.id} {...image} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"Gif\"]);\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <h2>Fetch to GIF API</h2>\r\n\r\n      <AddCategory setCategories={setCategories} />\r\n\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid category={category} key={category} />\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n  \n"],"sourceRoot":""}